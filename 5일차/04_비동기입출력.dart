// p231 비동기 입출력
// 동기 : 컴퓨터 작업요청시 한 작업의 결과가 돌아올 때까지 다음 작업은 대기한다.
// 비동기: 컴퓨터 작업요청시 한 작업이 끝나지 않아도 다음 작업을 진행

//async : 이 함수 안에는 await가 있어.
void main() async {
  //Future = main함수를 동작 중에, 작업 예약을 거는 문법
  // 지연해줘 / 3초동안 / 그리고 프린트해줘
  // Future.delayed( 시간, 실행동작);
  // => 이 화살표 넣지 않아도 동일한 함수표현방법이다.
  // () => 동작 : 한줄 코드일 때 주로 사용
  // () {동작;} : 여러줄 코드일 때 사용. (동작마다 ; 넣기)

  print("밥 주문");
  // await : 해당작업이 끝날때까지 기다려라
  await Future.delayed(Duration(seconds: 3), () => print("밥 기다리기"));
  print("밥 먹기");
}

// 컴퓨터는 항상 동기로 작업함
// 하지만 시간이 오래 걸리는 작업(예 서버통신)은 멈추지 않고 넘기기위해 비동기로 처리할 수 있다.

// 따라서, 먼저 진행해야하는 작업은 비동기를 이용한다.
// 비동기 : 비동기로 작동할 부분 (함수)가 async로 선언하고
// 시간이 도래 걸리는작업 앞에는 await를 붙인다.

// async가 작성된 함수에서 await를 만나게 될 경우,
//컴퓨터는 await에 해당하는 부분이 만족할 때 까지 기다리다가
// 해당 await 부분을 만족할 때 다음 코드로 넘어감

// 비동기를 쓴 함수에서는 void를 쓸수 없다!!!!!!
